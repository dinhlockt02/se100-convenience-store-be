// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// User related models
model User {
  id                 Int                  @id @default(autoincrement())
  email              String               @unique
  fullname           String?
  password           String
  ResetPasswordToken ResetPasswordToken[]
  birthday           DateTime             @db.Date()
  identityNumber     String
  gender             Gender
  phoneNumber        String
  address            String
  other              String
  avatar             String
  role               Role
  Invoice            Invoice[]
  DeliveryNote       DeliveryNote[]
  updatedAt          DateTime             @updatedAt
}

enum Gender {
  MALE
  FEMALE
}

enum Role {
  MANAGER
  EMPLOYEE
}

model ResetPasswordToken {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id])
  userId Int
}

// Product related models

model Provider {
  id                  Int                   @id @default(autoincrement())
  name                String
  address             String
  email               String
  products            Product[]             @relation()
  deliveryNotes       DeliveryNote[]
  phone               String                @default("")
  representative      String                @default("")
  ProvidersOnProducts ProvidersOnProducts[]
  updatedAt           DateTime              @updatedAt
}

model Product {
  id                  Int                   @id @default(autoincrement())
  title               String
  tax                 Decimal
  providers           Provider[]            @relation()
  ProductItems        ProductItem[]
  ProvidersOnProducts ProvidersOnProducts[]
  updatedAt           DateTime              @updatedAt
}

model ProvidersOnProducts {
  provider   Provider @relation(fields: [providerId], references: [id])
  providerId Int
  product    Product  @relation(fields: [productId], references: [id])
  productId  Int

  @@id([providerId, productId])
}

model DeliveryNote {
  id            String        @id
  provider      Provider      @relation(fields: [providerId], references: [id])
  providerId    Int
  date          DateTime
  total         Int
  productItems  ProductItem[]
  creator       User          @relation(fields: [userId], references: [id])
  userId        Int
  shipper       String
  totalQuantity Int           @default(0)
}

model ProductItem {
  id              String          @id @default(uuid())
  product         Product         @relation(fields: [productId], references: [id])
  productId       Int
  deliveryNote    DeliveryNote    @relation(fields: [deliveryNoteId], references: [id])
  deliveryNoteId  String
  /// Manufaturing Date
  MFG             DateTime
  /// Expiration Date
  EXP             DateTime
  /// The money that store spent buying the product
  cost            Int
  /// The money that customers have to pay to buy product 
  price           Int
  quantity        Int
  /// The quantity at the first time
  initialQuantity Int
  description     String
  image           String
  InvoiceDetail   InvoiceDetail[]
  updatedAt       DateTime        @updatedAt
}

// Invoice related models

model Invoice {
  id            String          @id @default(uuid())
  /// The date and time invoice created at
  date          DateTime
  /// The person who created the invoice
  creator       User            @relation(fields: [userId], references: [id])
  userId        Int
  total         Int
  InvoiceDetail InvoiceDetail[]
}

model InvoiceDetail {
  productItem   ProductItem @relation(fields: [productItemId], references: [id])
  productItemId String
  invoice       Invoice     @relation(fields: [invoiceId], references: [id])
  invoiceId     String
  price         Int
  quantity      Int

  @@id([productItemId, invoiceId])
}

model ProductItemQuantityStateRule {
  id        Int    @id() @default(autoincrement())
  stateName String
  minVal    Int
  maxVal    Int
  color     String
}

model ProductItemExpireStateRule {
  id        Int    @id() @default(autoincrement())
  stateName String
  val       Int
  color     String
}
