// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// User related models
model User {
  id                 Int                  @id @default(autoincrement())
  email              String               @unique
  fullname           String?
  password           String
  ResetPasswordToken ResetPasswordToken[]
  birthday           DateTime             @db.Date()
  identityNumber     String
  gender             Gender
  phoneNumber        String
  address            String
  other              String
  avatar             String
  role               Role
  Invoice            Invoice[]
}

enum Gender {
  MALE
  FEMALE
}

enum Role {
  MANAGER
  EMPLOYEE
}

model ResetPasswordToken {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id])
  userId Int
}

// Product related models

model Provider {
  id            Int            @id @default(autoincrement())
  name          String
  address       String
  email         String
  products      Product[]      @relation()
  deliveryNotes DeliveryNote[]
}

model Product {
  id           String        @id @default(uuid())
  title        String
  tax          Decimal
  providers    Provider[]    @relation()
  ProductItems ProductItem[]
}

model DeliveryNote {
  id           Int           @id @default(autoincrement())
  provider     Provider      @relation(fields: [providerId], references: [id])
  providerId   Int
  date         DateTime
  total        Int
  productItems ProductItem[]
}

model ProductItem {
  id             String          @id @default(uuid())
  product        Product         @relation(fields: [productId], references: [id])
  productId      String
  deliveryNote   DeliveryNote    @relation(fields: [deliveryNoteId], references: [id])
  deliveryNoteId Int
  /// Manufaturing Date
  MFG            DateTime
  /// Expiration Date
  EXP            DateTime
  /// The money that store spent buying the product
  cost           Int
  /// The money that customers have to pay to buy product 
  price          Int
  quantity       Int
  description    String
  image          String
  InvoiceDetail  InvoiceDetail[]
}

// Invoice related models

model Invoice {
  id            String          @id @default(uuid())
  /// The date and time invoice created at
  date          DateTime
  /// The person who created the invoice
  creator       User            @relation(fields: [userId], references: [id])
  userId        Int
  total         Int
  InvoiceDetail InvoiceDetail[]
}

model InvoiceDetail {
  productItem   ProductItem @relation(fields: [productItemId], references: [id])
  productItemId String
  invoice       Invoice     @relation(fields: [invoiceId], references: [id])
  invoiceId     String
  price         Int
  quantity      Int

  @@id([productItemId, invoiceId])
}
